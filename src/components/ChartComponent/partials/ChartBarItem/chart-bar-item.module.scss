@import 'src/styles/mixins.scss';

.root {
  height: 32px;

  position: relative;

  &__tip {
    min-width: 100px;
    display: flex;
    flex-direction: column;
    gap: 4px;

    position: absolute;
    top: 70%;
    left: 30%;

    @media (max-width: 900px) {
      left: initial;
      right: 20%;

      border-radius: 4px;

      align-items: end;
    }

    &__label,
    &__pricing {
      padding-left: 4px;
    }

    &__label {
      border-left: 1px solid get-color(greyed, base);

      padding-top: 10px;

      width: content-fit;
      min-height: 32px;

      display: flex;
      flex-direction: column;
      justify-content: flex-end;

      @media (max-width: 900px) {
        border-left: none;
        border-right: 1px solid get-color(greyed, base);

        justify-content: flex-start;
        align-items: end;

        padding-left: 0;
        padding-right: 4px;
      }
    }

    &__pricing {
      height: auto;

      @media (max-width: 900px) {
        padding-right: 4px;
      }
    }
  }
}

.isAsPcTip {
  @media (max-width: 900px) {
    top: 70%;
    left: 10%;

    border-radius: none;

    align-items: initial;
  }
}

.isAsPcLabel {
  @media (max-width: 900px) {
    border-right: none;
    border-left: 1px solid get-color(greyed, base);

    padding-top: 10px;

    width: content-fit;
    min-height: 32px;

    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: start;

    padding-left: 4px;
  }
}

.isAsPcPricing {
  @media (max-width: 900px) {
    padding-right: none;
  }
}

.tipTop {
  gap: 2px;

  top: -120%;
  left: initial;
  right: 20%;

  flex-direction: column-reverse;
  align-items: end;

  @media (max-width: 900px) {
    left: initial;
    right: 50%;
  }
}

.labelBottomMiddle {
  left: 15%;
}

.labelTop {
  padding-top: 0;
  padding-bottom: 8px;
  padding-right: 4px;
  padding-left: 0;

  justify-content: flex-start;
  align-items: end;

  border-left: none;
  border-right: 1px solid get-color(greyed, base);
}

.pricingTop {
  padding-right: 4px;
}

.isRed {
  border: 1.6px solid get-color(redded, base);
}
.isGrey {
  border: 1.6px solid #e8e9e9;
}
